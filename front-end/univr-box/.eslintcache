[{"C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\index.js":"1","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\App.js":"2","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\reportWebVitals.js":"3","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\Login.js":"4","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\Result.js":"5","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\NicName.js":"6","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\RDBox.js":"7","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\GiftModal.js":"8","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\lib\\constants.js":"9"},{"size":679,"mtime":1609937215182,"results":"10","hashOfConfig":"11"},{"size":593,"mtime":1609987641796,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2566,"mtime":1610027907504,"results":"14","hashOfConfig":"11"},{"size":2961,"mtime":1610029370718,"results":"15","hashOfConfig":"11"},{"size":4119,"mtime":1610076547558,"results":"16","hashOfConfig":"11"},{"size":9410,"mtime":1610086508207,"results":"17","hashOfConfig":"11"},{"size":4900,"mtime":1610029595874,"results":"18","hashOfConfig":"11"},{"size":61,"mtime":1609984127060,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"3w2p4z",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\index.js",[],["45","46"],"C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\App.js",[],"C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\reportWebVitals.js",[],"C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\Login.js",["47"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport KaKaoLogin from 'react-kakao-login';\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport constants from '../lib/constants';\r\nimport loginbg from '../asset/loginbg.png';\r\nfunction Login() {\r\n    const history = useHistory();\r\n\r\n\r\n    const responseKaKao = (res) => {\r\n        {sessionStorage.clear()}\r\n        axios({\r\n            method: \"POST\",\r\n            url: constants.HostUrl+`/user/login?id=${res.profile.id}`,\r\n        }).then((response)=>{\r\n            if(response.data === 0){\r\n                history.push(`/nicname/${res.profile.id}`);\r\n            }else if(response.data === 1){\r\n                history.push(`/randombox/${res.profile.id}`);\r\n            }else{\r\n                history.push(`/result/${res.profile.id}`);\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Background style={{backgroundImage : \"url(\"+loginbg+\")\"}}>\r\n                    <KaKaoBtn\r\n                        //styled component 통해 style을 입혀 줄 예정 \r\n                        jsKey={'afc38fc6dbcef38edc16f34644fe6363'}\r\n                        //카카오에서 할당받은 jsKey를 입력\r\n                        buttonText='카카오 로그인'\r\n                        //로그인 버튼의 text를 입력\r\n                        onSuccess={responseKaKao}\r\n                        //성공했을때 불러올 함수로서 fetch해서 localStorage에 저장할 함수를 여기로 저장 \r\n                        getProfile={true}\r\n                    />\r\n            </Background>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst Background = styled.div`\r\n    width:100%;\r\n    height:100vh;\r\n    background-position: center;\r\n    background-size: cover;\r\n    overflow:auto;\r\n`;\r\n\r\nconst KaKaoBtn = styled(KaKaoLogin)`\r\nposition: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform:translate(-50%, -50%);\r\n  padding: 0;\r\n  height: 45px;\r\n  line-height: 44px;\r\n  color: #783c00;\r\n  background-color: #ffeb00;\r\n  border: 1px solid transparent;\r\n  border-radius: 8px !important;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  -webkit-box-shadow: 5px 5px 6px -1px rgba(0,0,0,0.42) !important;\r\n  -moz-box-shadow: 5px 5px 6px -1px rgba(0,0,0,0.42) !important;\r\n  box-shadow: 5px 5px 6px -1px rgba(0,0,0,0.42) !important;\r\n  &:hover {\r\n    box-shadow: 0 0px 15px 0 rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\Result.js",["48"],"import React , {useState, useEffect}from 'react';\r\nimport styled from \"styled-components\";\r\nimport { useLocation,useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport constants from '../lib/constants';\r\nimport nicknamebg from '../asset/nicknamebg.png';\r\n\r\nfunction Result({match}){\r\n    let id = match.params.id;\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const [user, setUser] = useState({\r\n        nickname: '',\r\n        item: '',\r\n    })\r\n\r\n    const {nickname, item} = user;\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: constants.HostUrl +`/user/info?id=${id}`,\r\n        }).then((response) => {\r\n            setUser(response.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }, [location]);\r\n\r\n    const _Completed = () => {\r\n        history.push(`/`);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Background style={{backgroundImage : \"url(\"+nicknamebg+\")\"}}>\r\n                <ResultBox>\r\n\r\n                    <ResultText>{nickname}님은</ResultText>\r\n                    <ResultText>{item}에 당첨되셨습니다.</ResultText>\r\n                    <Button variant=\"contained\" color=\"primary\" disableElevation className={classes.button} onClick={_Completed}>\r\n                        돌아가기\r\n                    </Button>\r\n                </ResultBox>\r\n            </Background>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Result;\r\nconst Background = styled.div`\r\n    width:100%;\r\n    height:100vh;\r\n    background-position: center;\r\n    background-size: cover;\r\n    overflow:auto;\r\n`;\r\n\r\n\r\nconst ResultText = styled.div`\r\n    text-align: center;\r\n    font-size: 35px;\r\n    line-height: 32px;\r\n    font-family: 'Do Hyeon', sans-serif;\r\n    margin: 20px 0;\r\n    @media (max-width: 480px) {\r\n        font-size: 23px;\r\n        line-height: 25px;\r\n    }\r\n`;\r\nconst ResultBox = styled.div`\r\n    width: 420px;\r\n    border-radius: 30px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform:translate(-50%, -50%);\r\n    background-color: white;\r\n    padding: 2% 5% 3%;\r\n    -webkit-box-shadow: 2px 2px 6px -1px rgba(0,0,0,0.42);\r\n    -moz-box-shadow: 2px 2px 6px -1px rgba(0,0,0,0.42);\r\n    box-shadow: 2px 2px 6px -1px rgba(0,0,0,0.42);\r\n    @media (max-width: 768px) {\r\n        width: 380px;\r\n\r\n    }\r\n    @media (max-width: 480px) {\r\n        width: 70%;\r\n\r\n    }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: \"5px auto\",\r\n        display: \"block\",\r\n        \"&.MuiButtonBase-root\":{\r\n            width: \"386px\",\r\n            \"@media (max-width: 768px)\": {\r\n                width: \"366px\"\r\n            },\r\n            \"@media (max-width: 480px)\": {\r\n                width: \"90%\",\r\n            }\r\n        },\r\n        \r\n    }\r\n  }));","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\NicName.js",["49"],"import React, { useState, useEffect } from 'react';\r\nimport styled from \"styled-components\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { useLocation,useHistory } from \"react-router-dom\";\r\nimport nicknamebg from '../asset/nicknamebg.png';\r\nimport constants from '../lib/constants';\r\n\r\nfunction NicName({match}){\r\n    let id = match.params.id;\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [nickname, setNickname] = useState('');\r\n    const classes = useStyles();\r\n\r\n    const _onChange = (e) => {\r\n        setNickname(e.target.value);\r\n    }\r\n\r\n    const _Completed = () => {\r\n        if(nickname === ''){\r\n            alert('닉네임을 입력해주세요.');\r\n        }else{\r\n            axios({\r\n                method: 'POST',\r\n                url: constants.HostUrl + `/user/join?id=${id}&nickname=${nickname}&token=univr`,\r\n            }).then((response) => {\r\n                history.push(`/randombox/${id}`);\r\n            }).catch((error)=>{\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios({\r\n            method: \"POST\",\r\n            url: constants.HostUrl+`/user/login?id=${id}`,\r\n        }).then((response)=>{\r\n            if(response.data === 1){\r\n                history.push(`/randombox/${id}`);\r\n            }else if(response.data === 2){\r\n                history.push(`/result/${id}`);\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n\r\n    },[location])\r\n\r\n    return(\r\n        <>\r\n            <Background style={{backgroundImage : \"url(\"+nicknamebg+\")\"}}>\r\n                <LoginBox>\r\n                    <TextBox>\r\n                        <SubTitle>닉네임을 입력해주세요.</SubTitle>\r\n                    </TextBox>\r\n                    <TextField id=\"outlined-basic\" label=\"닉네임\" variant=\"outlined\" className={classes.root} value={nickname} onChange={_onChange}/>\r\n                    <Button variant=\"contained\" color=\"primary\" disableElevation className={classes.button} onClick={_Completed}>\r\n                        OK!\r\n                    </Button>\r\n                </LoginBox>\r\n            </Background>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NicName;\r\n\r\nconst Background = styled.div`\r\n    width:100%;\r\n    height:100vh;\r\n    background-position: center;\r\n    background-size: cover;\r\n    overflow:auto;\r\n`;\r\n\r\n\r\n\r\nconst TextBox = styled.div`\r\n    margin-top: 5%;\r\n    margin-bottom: 2%;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n    text-align: center;\r\n    font-size: 41px;\r\n    line-height: 32px;\r\n    font-family: 'Do Hyeon', sans-serif;\r\n    @media (max-width: 480px) {\r\n        font-size: 23px;\r\n        line-height: 15px;\r\n    }\r\n`;\r\n\r\nconst LoginBox = styled.div`\r\n    width: 400px;\r\n    border-radius: 30px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform:translate(-50%, -50%);\r\n    background-color: white;\r\n    padding: 2% 5% 3%;\r\n    -webkit-box-shadow: 2px 2px 6px -1px rgba(0,0,0,0.42);\r\n    -moz-box-shadow: 2px 2px 6px -1px rgba(0,0,0,0.42);\r\n    box-shadow: 2px 2px 6px -1px rgba(0,0,0,0.42);\r\n    @media (max-width: 768px) {\r\n        width: 380px;\r\n\r\n    }\r\n    @media (max-width: 480px) {\r\n        width: 70%;\r\n\r\n    }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n      \"&.MuiFormControl-root\": {\r\n          width: \"100%\",\r\n          margin: \"10px auto\"\r\n      },\r\n\r\n      \"&.MuiOutlinedInput-input\": {\r\n          \"@media (max-width: 480px)\": {\r\n            padding: \"16.5px 14px\"\r\n          }\r\n      }\r\n    },\r\n    button: {\r\n        margin: \"5px auto\",\r\n        display: \"block\",\r\n        \"&.MuiButtonBase-root\":{\r\n            width: \"386px\",\r\n            \"@media (max-width: 768px)\": {\r\n                width: \"366px\"\r\n            },\r\n            \"@media (max-width: 480px)\": {\r\n                width: \"90%\",\r\n            }\r\n        },\r\n        \r\n    }\r\n  }));","C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\RDBox.js",["50"],"C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\page\\GiftModal.js",["51"],"import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport styled from 'styled-components';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport one from '../asset/list/1.png';\r\nimport two from '../asset/list/2.jpg';\r\nimport three from '../asset/list/3.png';\r\nimport four from '../asset/list/4.png';\r\nimport five from '../asset/list/5.png';\r\nimport six from '../asset/list/6.png';\r\nimport seven from '../asset/list/7.png';\r\nimport eight from '../asset/list/8.png';\r\nimport nine from '../asset/list/9.png';\r\nimport ten from '../asset/list/10.png';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction GiftModal({ isOpen, closeModal ,list}){\r\n\r\n    const classes = useStyles();\r\n\r\n    const images = [one, two, three, four, five, six, seven, eight, nine, ten];\r\n\r\n\r\n    return(\r\n        <Modal isOpen={isOpen} onRequestClose={closeModal} style={modalStyles}>\r\n            <Paper className={classes.paper} className={classes.container}>\r\n                <Closebtn onClick={closeModal}>X</Closebtn>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} >\r\n                        <div className={classes.title}>\r\n                            상품 목록\r\n                        </div>\r\n                    </Grid>\r\n                    {list.map((gift, index) => (\r\n                        <>\r\n                            <Grid item xs={3} key={index}>\r\n                                <div>\r\n                                    <img src={images[index]} alt=\"\" className={classes.giftimg} />\r\n                                    <div className={classes.gifttext}>{gift.name}</div>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3} >\r\n                                <div className={classes.countbox}>\r\n                                    <div className={classes.textcount}>잔여량</div>\r\n                                    <div className={classes.gifttext}>{gift.cnt}개</div>\r\n                                </div>\r\n                            </Grid>\r\n                        </>\r\n                    ))}\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n                \r\n            </Paper>\r\n        \r\n        \r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default GiftModal;\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Closebtn = styled.div`\r\n    border-radius : 50%;\r\n    width : 15px;\r\n    height: 15px;\r\n    font-size: 10px;\r\n    text-align: center;\r\n    color: rgb(70,70,70);\r\n    border: 1px solid rgb(70,70,70);\r\n    position: absolute;\r\n    right: 5px;\r\n    top: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst modalStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  overlay: {\r\n    zIndex: '10',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button1: {\r\n        margin: \"50px auto 0px\",\r\n        display: \"block\",\r\n        \r\n        padding: \"15px\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n        \"&.MuiButtonBase-root\":{\r\n            width: \"386px\",\r\n            \"@media (max-width: 768px)\": {\r\n                width: \"366px\"\r\n            },\r\n            \"@media (max-width: 480px)\": {\r\n                width: \"90%\",\r\n            }\r\n        },\r\n    },\r\n    button2: {\r\n        margin: \"50px auto 0px\",\r\n        display: \"block\",\r\n        \r\n        padding: \"15px\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n        \"&.MuiButtonBase-root\":{\r\n            width: \"386px\",\r\n            \"@media (max-width: 768px)\": {\r\n                width: \"366px\"\r\n            },\r\n            \"@media (max-width: 480px)\": {\r\n                width: \"90%\",\r\n            }\r\n        },\r\n    },\r\n    container:{\r\n        width: \"700px\",\r\n        padding: \"20px\",\r\n        \"@media (max-width: 768px)\": {\r\n            width: \"450px\",\r\n            height: \"500px\",\r\n            overflowY: \"scroll\"\r\n        },\r\n        \"@media (max-width: 480px)\": {\r\n            width: \"280px\",\r\n        }\r\n    },\r\n    giftimg:{\r\n        width: \"70px\",\r\n        height: \"55px\",\r\n        textAlign: \"center\",\r\n        display: \"block\",\r\n        margin: \"0 auto\"\r\n    },\r\n    gifttext:{\r\n        fontFamily: \"'Do Hyeon', sans-serif\",\r\n        textAlign: \"center\",\r\n    },\r\n    countbox:{\r\n        marginTop: \"25px\"\r\n    },\r\n    textcount:{\r\n        textAlign: \"center\",\r\n        fontFamily: \"'Do Hyeon', sans-serif\",\r\n        fontSize: \"20px\"\r\n\r\n    },\r\n    title:{\r\n        fontFamily: \"'Do Hyeon', sans-serif\",\r\n        fontSize: \"28px\",\r\n        textAlign: \"center\",\r\n        color: \"rgb(27 160 182)\"\r\n    },\r\n    giftlistbtn:{\r\n        textAlign: \"center\",\r\n        fontFamily: \"'Do Hyeon', sans-serif\",\r\n        fontSize: \"20px\",\r\n        cursor: \"pointer\",\r\n        marginTop: \"10px\"\r\n    }\r\n  }));",["52","53"],"C:\\ssafy\\추첨\\RDbox\\front-end\\univr-box\\src\\lib\\constants.js",["54"],"export default {\r\n    HostUrl: 'http://localhost:8080',\r\n  };",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":13,"column":9,"nodeType":"61","messageId":"62","endLine":13,"endColumn":33},{"ruleId":"63","severity":1,"message":"64","line":30,"column":8,"nodeType":"65","endLine":30,"endColumn":18,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":51,"column":7,"nodeType":"65","endLine":51,"endColumn":17,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"67","line":137,"column":8,"nodeType":"65","endLine":137,"endColumn":18,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":29,"column":46,"nodeType":"72","endLine":29,"endColumn":75},{"ruleId":"55","replacedBy":"73"},{"ruleId":"57","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":1,"nodeType":"77","endLine":3,"endColumn":5},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.",["81"],["82"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["78"],["79"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},"Update the dependencies array to be: [id, location]",{"range":"88","text":"89"},"Update the dependencies array to be: [history, id, location]",{"range":"90","text":"91"},{"range":"92","text":"91"},[954,964],"[id, location]",[1630,1640],"[history, id, location]",[4750,4760]]